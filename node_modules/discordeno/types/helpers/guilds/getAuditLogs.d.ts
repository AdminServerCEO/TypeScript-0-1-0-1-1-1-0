import type { Bot } from "../../bot.js";
import { AuditLogEntry } from "../../transformers/auditLogEntry.js";
import { AutoModerationRule } from "../../transformers/automodRule.js";
import { Channel } from "../../transformers/channel.js";
import { Integration } from "../../transformers/integration.js";
import { User } from "../../transformers/member.js";
import { ScheduledEvent } from "../../transformers/scheduledEvent.js";
import { Webhook } from "../../transformers/webhook.js";
import { AuditLogEvents } from "../../types/shared.js";
export declare type AuditLog = {
    auditLogEntries: AuditLogEntry[];
    autoModerationRules?: AutoModerationRule[];
    guildScheduledEvents?: ScheduledEvent[];
    integrations: Partial<Omit<Integration, "guildId">>[];
    threads: Channel[];
    users: User[];
    webhooks: Webhook[];
};
/** Returns the audit logs for the guild. Requires VIEW_AUDIT_LOGS permission */
export declare function getAuditLogs(bot: Bot, guildId: bigint, options?: GetGuildAuditLog): Promise<AuditLog>;
/** https://discord.com/developers/docs/resources/audit-log#get-guild-audit-log-query-string-parameters */
export interface GetGuildAuditLog {
    /** Entries from a specific user ID */
    userId?: bigint | string;
    /** Entries for a specific audit log event */
    actionType?: AuditLogEvents;
    /** Entries that preceded a specific audit log entry ID */
    before?: bigint | string;
    /** Maximum number of entries (between 1-100) to return, defaults to 50 */
    limit?: number;
}
